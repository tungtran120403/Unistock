// src/services/profileService.js
import axios from "axios";

const API_URL = `${import.meta.env.VITE_API_URL}`;

// H√†m ƒë·ªÉ l·∫•y Token t·ª´ LocalStorage
const authHeader = () => {
  const token = localStorage.getItem("token");
  return token ? { Authorization: `Bearer ${token}` } : {};
};

// L·∫•y th√¥ng tin profile
export const getProfile = async () => {
  try {
    const response = await axios.get(`${API_URL}/profile`, {
      headers: authHeader(),
    });
    console.log("üìå [getProfile] API Response:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y th√¥ng tin profile:", error.response?.data || error.message);
    throw error;
  }
};

// C·∫≠p nh·∫≠t th√¥ng tin profile
export const updateProfile = async (profileData) => {
  try {
    const response = await axios.put(`${API_URL}/profile`, profileData, {
      headers: authHeader(),
    });
    console.log("‚úÖ [updateProfile] API Response:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t profile:", error.response?.data || error.message);
    throw error;
  }
};

// ƒê·ªïi m·∫≠t kh·∫©u
export const changePassword = async (passwordData) => {
  try {
    const response = await axios.post(`${API_URL}/profile/change-password`, passwordData, {
      headers: authHeader(),
    });
    console.log("‚úÖ [changePassword] API Response:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi ƒë·ªïi m·∫≠t kh·∫©u:", error.response?.data || error.message);
    throw error;
  }
};

// Upload ·∫£nh ƒë·∫°i di·ªán
export const uploadAvatar = async (file) => {
  try {
    const formData = new FormData();
    formData.append("avatar", file);

    const response = await axios.post(`${API_URL}/profile/avatar`, formData, {
      headers: {
        ...authHeader(),
        "Content-Type": "multipart/form-data",
      },
    });

    console.log("‚úÖ [uploadAvatar] API Response:", response.data);
    return response.data; // Tr·∫£ v·ªÅ URL c·ªßa ·∫£nh (chu·ªói)
  } catch (error) {
    console.error("‚ùå L·ªói khi upload ·∫£nh ƒë·∫°i di·ªán:", error.response?.data || error.message);
    throw error;
  }
};